---
interface Props {
	password: string;
	hint?: string;
	title?: string;
	excerpt?: string;
}

const {
	password,
	hint = "",
	title = "我保证不泄露文章图片",
	excerpt = "",
} = Astro.props;
---

<div class="password-protect-card">
  <div 
    id="password-protect-container" 
    class="max-w-2xl mx-auto my-8 p-6 bg-white dark:bg-gray-700 rounded-lg shadow-lg"
    data-password={password}
  >
    <div id="password-form">
      <h2 class="text-2xl font-bold mb-4 text-center">{title}</h2>
      
      {excerpt && (
        <div class="mb-6">
          <p class="text-gray-600 dark:text-gray-300 italic">{excerpt}</p>
        </div>
      )}
      
      <form id="password-protect-form" class="space-y-4">
        <div>
          <label for="password" class="block text-sm font-medium mb-1">
            请输入文字访问后续内容:
          </label>
          <input
            type="text"
            id="password"
            name="password"
            class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-primary focus:border-primary dark:bg-gray-700 dark:text-white"
            placeholder="输入密码..."
          />
        </div>
        
        {hint && (
          <div class="text-sm text-gray-500 dark:text-gray-400">
            {hint}
          </div>
        )}
        
        <div id="error-message" class="text-red-600 dark:text-red-400 text-sm hidden">
          文字错误，请重试。
        </div>
        
        <button
          type="submit"
          class="w-full bg-primary hover:bg-primary/90 font-medium py-2 px-4 rounded-md transition duration-300"
        >
          解锁内容
        </button>
      </form>
    </div>
    
    <div id="protected-content" class="hidden">
      <slot />
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('password-protect-form');
    const container = document.getElementById('password-protect-container');
    const passwordForm = document.getElementById('password-form');
    const protectedContent = document.getElementById('protected-content');
    const errorMessage = document.getElementById('error-message');
    const passwordInput = document.getElementById('password');
    
    // 确保元素存在
    if (!form || !passwordForm || !protectedContent || !errorMessage || !passwordInput || !container) {
      console.error('Password protect component elements not found');
      return;
    }
    
    // 获取密码
    const correctPassword = container?.dataset.password;
    
    form.addEventListener('submit', (e) => {
      e.preventDefault();
      const enteredPassword = (passwordInput as HTMLInputElement).value;
      
      if (enteredPassword === correctPassword) {
        // 隐藏表单并将受保护的内容移动到容器外，与普通文章显示一致
        passwordForm.classList.add('hidden');
        errorMessage.classList.add('hidden');
        
        // 将受保护的内容移动到容器外
        const content = protectedContent.innerHTML;
        const parent = container.parentNode;
        const newDiv = document.createElement('div');
        newDiv.innerHTML = content;
        parent?.replaceChild(newDiv, container);
      } else {
        // 显示错误消息
        errorMessage.classList.remove('hidden');
      }
    });
  });
</script>